<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>博客搭建教程</title>
    <url>/2022/10/11/Hexo-Butterfly/</url>
    <content><![CDATA[<div class="note orange icon-padding flat"><i class="note-icon fa-solid fa-megaphone"></i><p>本教程针对的是使用Hexo框架&amp;Butterfly主题，使用Github Pages作为服务器以供访问，建立个人博客的过程，此外，还包含图床配置内容。此方案免费简单，很好的满足了大家初次尝试建立一个漂亮的博客，并上传经验分享贴或经验总结贴的需求。</p>
</div>
<h2 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h2><h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><ul>
<li>Hexo是一个快速、简洁且高效的博客框架，使用Markdown解析文章并生成静态网页</li>
<li>Butterfly是一个美观简单的Hexo卡片UI设计主题，开发者提供了十分详细的教程并保持了高频率的版本更新，十分适合初学者选择</li>
<li>Github建站原理：将所有资源建立在特定的github仓库中，使用Github Pages作为服务器以供访问</li>
</ul>
<h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><ul>
<li>下载<a href="https://nodejs.org/en/download/">Node.js</a>（JavaScript运行环境）<ul>
<li>点击链接<a href="https://nodejs.org/en/download/">Node.js</a>进行下载</li>
<li><a href="https://baike.baidu.com/item/CMD%E5%91%BD%E4%BB%A4">cmd</a>输入<code>node -v</code>检查是否安装/已安装的Node.js版本号</li>
<li><a href="https://baike.baidu.com/item/CMD%E5%91%BD%E4%BB%A4">cmd</a>输入<code>npm -v</code>检查是否安装/已安装的Node.js中npm工具的版本号</li>
</ul>
</li>
<li>下载<a href="https://git-scm.com/downloads">Git</a>（开源分布式版本控制系统，项目版本管理）<ul>
<li>点击链接<a href="https://git-scm.com/downloads">Git</a>进行下载</li>
<li><a href="https://baike.baidu.com/item/CMD%E5%91%BD%E4%BB%A4">cmd</a>输入<code>git --version</code>检查是否安装/已安装的Git版本号</li>
</ul>
</li>
<li>下载Hexo（博客框架）：<ul>
<li><a href="https://baike.baidu.com/item/CMD%E5%91%BD%E4%BB%A4">cmd</a>输入<code>npm install hexo-cli --location=global</code>下载/更新Hexo</li>
<li><a href="https://baike.baidu.com/item/CMD%E5%91%BD%E4%BB%A4">cmd</a>输入<code>hexo -v</code>检查是否安装/已安装的Hexo版本号</li>
</ul>
</li>
</ul>
<h3 id="建立仓库"><a href="#建立仓库" class="headerlink" title="建立仓库"></a>建立仓库</h3><ul>
<li>在github建立仓库：由于该仓库启用Github Pages服务，因此该仓库为特殊仓库，命名必须为Username.github.io（在Settings界面中：Public profile-Name为昵称，Account-username为用户名）</li>
<li>勾选Add a README file</li>
<li>最后点击建立仓库。</li>
</ul>
<h3 id="生成SSH-Keys（github关联本地-上传权限）"><a href="#生成SSH-Keys（github关联本地-上传权限）" class="headerlink" title="生成SSH Keys（github关联本地/上传权限）"></a>生成SSH Keys（github关联本地/上传权限）</h3><ul>
<li>在本地<mark class="hl-label blue">任意</mark> 文件夹的空白区域右键，并点击Git Bash Here</li>
<li>在打开的Git界面中（该界面环境为Linux，因此粘贴为右键-Paste/而不是ctrl+v）<ul>
<li>输入<code>ssh</code>检查是否安装/已安装的ssh（一般在安装Git时已经带有此工具）</li>
<li>输入<code>ssh-keygen -t rsa -C &quot;邮件地址&quot;</code>（邮件地址为github注册时的邮件地址）后，连续敲四次回车,此时已经在电脑本地建立文件夹，路径为/c/Users(用户)/“用户名”/.ssh/id_rsa</li>
</ul>
</li>
<li>右键该路径下的id_rsa.pub文件，用文本编辑器(如Notepad++)打开，对内容进行全选复制</li>
<li>在Github-Settings界面中的SSH and GPG keys选项卡中，点击New SSH key新建一个钥匙，你可以任取一个Title，并把id_rsa.pub文件中复制的内容<mark class="hl-label blue">原封不动</mark> 的复制到Key中</li>
<li>最后，在Git界面中输入ssh -T git@github.com测试ssh是否绑定成功（当显示Hi+github注册名即成功）</li>
</ul>
<h3 id="本地生成博客内容"><a href="#本地生成博客内容" class="headerlink" title="本地生成博客内容"></a>本地生成博客内容</h3><p>博客内容需要先在本地建立，并以部署的形式上传到网上，此外，由于部署需要时间，本地生成也是一个十分方便的调试手段</p>
<ul>
<li>新建一个文件夹(该文件夹将为你的本地博客根目录)，打开后在空白处右键，点击<code>Git Bash Here</code></li>
<li>在打开的Git界面中<ul>
<li>输入<code>hexo init</code>以初始化hexo（由于github是国外网站，若连接失败可以多次尝试或换镜像源）</li>
<li>当出现INFO  Start blogging with Hexo!时，代表包安装成功</li>
<li>输入hexo s在本地静态生成hexo页面（打开本地服务器，不需要时按Ctrl+C后可关闭该本地服务器）</li>
</ul>
</li>
</ul>
<h3 id="发布博客至互联网"><a href="#发布博客至互联网" class="headerlink" title="发布博客至互联网"></a>发布博客至互联网</h3><p>到目前为止，我们的本地博客就成功搭建了，但是现在我们只能通过本地静态生成页面查看博客，我们的目标是让其他人也能够访问我们的博客，这就需要我们将博客<mark class="hl-label blue">部署</mark> 到Github Pages上</p>
<ul>
<li>需要了解的github过去进行的两次更新(这使得有些教程已经失效)：<ul>
<li>将本地文件上传至github不再使用钥匙验证，而使用令牌验证</li>
<li>默认分支从master改为了main</li>
</ul>
</li>
<li>打开本地博客文件夹中_config.yml文件，将最后的deploy部分修改为<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span>   <span class="string">//冒号后有空格</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">【这里填你的SSH】例如：git@github.com:NL-REMOTE/NL-REMOTE.github.io.git，SSH可以在特殊仓库-Code-SSH中找到</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li>
<li>在博客文件夹下右键并点击<code>Git Bash Here</code><ul>
<li>输入<code>npm install hexo-deployer-git --save</code>，安装hexo部署到git page的自动部署发布工具<br>Hexo安装完成后，将会在指定文件夹中新建所需要的文件，其目录如下：<br><img src="https://cdn.jsdelivr.net/gh/NL-REMOTE/source/image/post/Hexo-Butterfly/file_catalog.jpg" alt="" title="本地文件目录"></li>
<li>本次为初次生成，因此不需输入<code>hexo clean</code></li>
<li>输入<code>hexo g</code>生成页面</li>
<li>输入<code>hexo d</code>上传文件至github</li>
<li>在首先弹出的GITHUB登陆界面中输入用户名和密码，登陆</li>
<li>在接下来弹出的SSH界面中输入用户名和令牌（此处不是密码）</li>
<li>在github-Settings-Developer settings-Personal access tokens中新建令牌，命名、设置有效期、赋予权限（可以全部选上）</li>
<li>新建令牌完成后会生成一段序列号（用以取代前面需要输入的密码），<mark class="hl-label blue">强烈建议妥善保存</mark> （关闭页面后该序列号会被隐藏）<br>若报错Error: Spawn failed，依次执行以下命令（可重复执行）<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>上述命令在之后的博客生涯中将不断使用，人称“hexo三板斧”<ul>
<li>当出现INFO  Deploy done: git时代表本地网页上传成功</li>
<li>此时可以通过网址打开已经上传至互联网的网页（网址路径：特殊仓库-settings-Pages）</li>
</ul>
</li>
</ul>
<div class="note red icon-padding flat"><i class="note-icon fa-solid fa-sun"></i><p>自此，我们已经成功完成了博客的搭建</p>
</div>
<h2 id="博客主题配置"><a href="#博客主题配置" class="headerlink" title="博客主题配置"></a>博客主题配置</h2><p>美观的主题对于博客来说当然是重中之重（谁不希望常常光顾漂亮的小站呢），<a href="https://butterfly.js.org/">Butterfly</a>是一个十分推荐的漂亮主题，但最为重要的是：他的开发者提供了十分详细的操作文档，并保持了高频率的版本更新。（有些很漂亮的主题操作文档并不完善，资料零散，甚至更不上hexo版本，因此十分推荐新手使用Butterfly主题）<br><img src="https://cdn.jsdelivr.net/gh/NL-REMOTE/source/image/post/Hexo-Butterfly/butterfly.png" alt="" title="butterfly主题"><br><img src="https://cdn.jsdelivr.net/gh/NL-REMOTE/source/image/post/Hexo-Butterfly/butterfly2.png" alt="" title="butterfly主题"><br>点击此处跳转至<a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly官方安装文档</a>，按照教程即可完成所有基本配置</p>
<h2 id="图床配置"><a href="#图床配置" class="headerlink" title="图床配置"></a>图床配置</h2><p>什么是图床？图床就是一个便于在博文中插入在线图片链接的个人图片仓库，它必须位于网上并可通过链接随时访问。设置图床之后，在自己博客中插入的图片链接就可以随时随地在线预览了，并且不会因为任何意外原因无法查看，除非自己亲自删除。</p>
<p>关于图床可以查看这篇文章：<a href="https://lovelijunyi.gitee.io/posts/a833.html">图床对比与Github图床的优化</a></p>
<p>我的博客使用PicGo将图片上传至github图床，选择这个方案的主要原因是稳定且完全免费，但国内访问有时需要科学上网（但个人觉得稳定性最为重要）。</p>
<p>PicGo的使用以及jsDelivr优化加速可以参考这篇文章：<a href="https://blog.csdn.net/Wonz5130/article/details/104119008">使用GitHub+PicGo+jsDelivr搭建自己的私人图床</a></p>
<p>此外需要提醒的是，github图床中的图片删除，需要到仓库中手动进行，而不能仅在PicGo相册中删除（相比于github，Gitee的图片删除是同步的，但Gitee仓库作为图床有风险！参见此文章<a href="https://blog.csdn.net/weixin_44062380/article/details/123761358">gitee图床因外链访问过多被封，我们该怎么办</a>），也希望读到此篇文章的大家对图库进行良好的分层管理，以方便维护。</p>
<h2 id="结尾祝福"><a href="#结尾祝福" class="headerlink" title="结尾祝福"></a>结尾祝福</h2><p>最后希望读到此篇文章的大家都能建立起自己的小站，关于此文章教材的疑问都可邮件联系博主（主页有邮件联系按键），也期待大家建站后分享友链！</p>
]]></content>
  </entry>
  <entry>
    <title>锁相环课设</title>
    <url>/2022/10/10/PLL/</url>
    <content><![CDATA[<p>本文分享了我参与通信电子线路课程设计——锁相环的测量与应用中，一些较为关键且特别的经验。文章定位为关键心得分享，因此对较为基础的知识不再重复赘述。</p>
<h2 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h2><p>本次课设是数字电路调试难度+模拟电路连线工作量，因此课程任务本身较为容易，按部就班连线并逐级调试即可。课设成绩的关键在于调参提高频率锁定的范围后，对稳定度和精确度进行追求，并对电路进行可能的创新性改进——这也是本文的中心。</p>
<h2 id="核心原理"><a href="#核心原理" class="headerlink" title="核心原理"></a>核心原理</h2><p><img src="https://cdn.jsdelivr.net/gh/NL-REMOTE/source/image/post/PLL/Core_principles.png" alt="" title="锁相环路"><br>锁相环路通过对比输入输出信号相位差来完成<mark class="hl-label blue">频率的锁定</mark> 。</p>
<h2 id="优化思路"><a href="#优化思路" class="headerlink" title="优化思路"></a>优化思路</h2><h3 id="电源滤波"><a href="#电源滤波" class="headerlink" title="电源滤波"></a>电源滤波</h3><p>本电路信号频率在百千赫兹至兆赫兹数量级，因此可以使用100nF电容对模拟/数字芯片作电源滤波，以提高系统稳定性</p>
<h3 id="器件选型"><a href="#器件选型" class="headerlink" title="器件选型"></a>器件选型</h3><p>本电路中外部环路滤波器的阻容及CD4046充放电电容对信号系统稳定性影响较大，可以在这些关键区域选择<a href="https://baike.baidu.com/item/%E9%87%91%E5%B1%9E%E8%86%9C%E7%94%B5%E9%98%BB">金属膜电阻</a>和<a href="https://baike.baidu.com/item/%E7%8B%AC%E7%9F%B3%E7%94%B5%E5%AE%B9">独石电容</a>这一类性能较好的直插器件来替换掉性能稍逊的<a href="https://baike.baidu.com/item/%E7%A2%B3%E8%86%9C%E7%94%B5%E9%98%BB">碳膜电阻</a>和<a href="https://baike.baidu.com/item/%E9%99%B6%E7%93%B7%E7%94%B5%E5%AE%B9">陶瓷电容</a>，提高系统稳定性。</p>
<h3 id="巧妙的“锁定”观测方案"><a href="#巧妙的“锁定”观测方案" class="headerlink" title="巧妙的“锁定”观测方案"></a>巧妙的“锁定”观测方案</h3><p><a href="https://www.ti.com.cn/product/cn/CD4046B#tech-docs">CD4046</a>提供了锁定提示脚——在锁定下输出高电平,反之输出低电平。就本题需求而言，可以将该脚的输出视为<a href="https://blog.csdn.net/xuewei_Li/article/details/87907052">PWM(脉冲宽度调制)波</a>。</p>
<p>而在一个<mark class="hl-label blue">惯性系统</mark> 中，PWM的占空比变化将影响平均功率，生活中常用此原理来实现灯的亮度和电机转速等控制。</p>
<p>显然，我们可以通过灯来巧妙直观的观测这一锁定提示信号，但单纯通过亮度上的变化来反映PWM波的占空比仍然不太直观，因此我们可以采用如下方案：</p>
<p>使用一颗共阴极/共阳极三引脚双色LED灯(推荐使用颜色色差较大的)。我使用的是红蓝双色灯，其可在“锁定”时显暖红色、“失锁”时显冷蓝色，并能利用灯自身的显色惯性，在芯片介于完全锁定和失锁之间时，对芯片输出的类PWM波形进行十分方便的观测：其颜色变化自大红色到粉色、到紫色、再到蓝紫色，最后变为亮蓝色。<mark class="hl-label blue">双色灯颜色的变化直观反映了系统的锁定状态，是一种十分推荐的巧妙检测方法！</mark> 。值得一提的是，正是这种巧妙的检测方法，使得我发现了频率计探针的接入能对锁相环路稳定性进行较大的影响(后文将提到)，并给出了针对性的有效改进。</p>
<h3 id="自锁开关"><a href="#自锁开关" class="headerlink" title="自锁开关"></a>自锁开关</h3><p>由于题目需要对分频数N进行频繁的调整，来对系统进行宽频范围的测试。采用跳线的方案显然不太便利和可靠，而按键开关要求持续的按下来改变电平，同样不适合任务需求。</p>
<p>推荐使用<a href="https://baike.baidu.com/item/%E8%87%AA%E9%94%81%E5%BC%80%E5%85%B3">自锁开关</a>，其特点为点按一次后按下，再点按一次后弹起。配置12颗自锁开关，并同时配置12颗LED灯来表征开关状态(因为在俯视调试过程中，按键按下/弹起的视觉差异不明显，我们需要的是高效的交互，而灯与自锁开关的搭配可以十分完美的实现这个要求！)。</p>
<h3 id="避免测量对系统的影响"><a href="#避免测量对系统的影响" class="headerlink" title="避免测量对系统的影响"></a>避免测量对系统的影响</h3><p>在调试中发现，当频率计的探针接入CD4046的4脚时，原本显示为红色(表示锁定)的双色灯会变为粉色(轻微失锁)，疑似频率计中的高频ADC采样对系统造成影响所致。</p>
<p>为了在获取频率的同时维持系统的极高稳定性，可采用电压跟随器对系统进行隔离。</p>
<p>然而，要满足本课设单电源、宽带、轨至轨的要求，采用运放来实现要求过于严苛。但考虑到信号本身类数字时钟型号(对信号波形要求较低)，因此可以使用电压比较器来代替运放构成的电压跟随器电路。</p>
<p>本系统采用<a href="https://www.ti.com.cn/product/cn/TLV3501">德州仪器TLV3501</a>比较器来采集4脚，完成了数字频率计ADC和锁相环路的隔离，因此极大的提高了系统稳定性。</p>
<h2 id="系统实物图"><a href="#系统实物图" class="headerlink" title="系统实物图"></a>系统实物图</h2><p><img src="https://cdn.jsdelivr.net/gh/NL-REMOTE/source/image/post/PLL/cover.jpg" alt="" title="锁相环路"></p>
<h2 id="详细资料"><a href="#详细资料" class="headerlink" title="详细资料"></a>详细资料</h2><p>以上仅为对课设中关键心得的分享，更为详细的课设资料均已开源，<a href="https://nuaaeducn-my.sharepoint.com/:f:/g/personal/zhengzk_nuaa_edu_cn/EqOjGeSHlJ9Hi1hydlygMegB50c2rHH2yKl1f7Ex4BW5IQ?e=MgxTaI">点此获取</a>。</p>
]]></content>
  </entry>
  <entry>
    <title>NL-ink</title>
    <url>/2022/10/10/NL-ink/</url>
    <content><![CDATA[<p>一个全栈式的无源NFC项目</p>
]]></content>
  </entry>
  <entry>
    <title>里德堡原子主题调研</title>
    <url>/2022/10/13/Rydberg_theme/</url>
    <content><![CDATA[<div class="note red icon-padding flat"><i class="note-icon fa-solid fa-sun"></i><p>本文“里德堡原子主题调研”为进行相关工作之前的调研总结工作，仅为自身学习便利所记，大多内容是对其他作者现有研究成果的调研与引用</p>
</div>
<h2 id="量子信息简介"><a href="#量子信息简介" class="headerlink" title="量子信息简介"></a>量子信息简介</h2><mark class="hl-label purple">量子信息是当今时代最热门的研究方向之一</mark> 
<ul>
<li>量子比特是经典比特的量子相干叠加态，这使得基于量子比特的通信过程更安全、并能通过全新的编码和计算方式来并行处理数据完成算法</li>
<li>光量子间相互作用弱、便于操纵、编码自由度多、传输速度快、损耗低等优点使得光量子成为量子信息领域最常见的信息载体</li>
<li>对信息的处理过程就是对光子的操控过程，里德堡原子系统在光子操控上相比于基态原子有着得天独厚的优势</li>
</ul>
<h2 id="里德堡原子简介"><a href="#里德堡原子简介" class="headerlink" title="里德堡原子简介"></a>里德堡原子简介</h2><div class="note orange icon-padding flat"><i class="note-icon fa-solid fa-sun"></i><p>核外电子被激发到远离核的高激发态（通常情况下要求主量子数n大于20）称为里德堡原激发态，对应被激发的原子称为里德堡原子。在这一接近于电离态的情形下，远离核的电子与原子核形成了极大的电偶极矩（相对低激发态大2-3个数量级），并表现出了许多奇异的特性</p>
</div>
<h3 id="里德堡原子性质"><a href="#里德堡原子性质" class="headerlink" title="里德堡原子性质"></a>里德堡原子性质</h3><p>以碱金属的里德堡激发态原子原子为研究对象，其具有如下性质：</p>
<ul>
<li>里德堡原子<mark class="hl-label blue">轨道半径正比于主量子数的平方</mark> <ul>
<li>极大的电偶极矩使得<mark class="hl-label blue">里德堡原子间相互作用强度要比基态中性原子间相互作用强度大三个数量级</mark> </li>
<li>利用这一独有特性可以灵活地调节相互作用强度，从而能够实现高保真度的各种量子门操作</li>
</ul>
</li>
<li>里德堡原子的<mark class="hl-label blue">能级间隔反比于主量子数的立方</mark> <ul>
<li>激发激光的线宽需要足够窄且频率足够稳定</li>
<li>高主量子数的激发态能级间隔能达到THz甚至GHz量级，这使得里德堡原子能够与微波场耦合（可使用里德堡原子探测微波信号、或利用微波操控里德堡原子）</li>
</ul>
</li>
<li>里德堡原子的能级寿命很长，其主要由高激发态的自发辐射和黑体辐射两部分决定<ul>
<li>高激发态电子波函数与基态波函数交叠很小，因此里德堡原子自发辐射概率很小，其<mark class="hl-label blue">自发辐射寿命正比于主量子数的立方</mark> </li>
<li>黑体辐射指高激发态能级在热光场下向相邻能级受激辐射过程，与原子温度、主量子数以及相邻能级有着密切关系。<a href="https://www.bilibili.com/read/cv6613562/">可以将里德堡原子制备到圆态来获得更长的辐射寿命（10ms量级）</a></li>
<li>长寿命优势使其能够在信息处理时提供足够操作时间，在量子信息中构建高保真的量子门或者量子开关</li>
</ul>
</li>
<li>由于stark效应导致的能级劈裂，当置于外电场中时，里德堡原子<mark class="hl-label blue">静电极化率正比于主量子数的七次方</mark> ，即更容易被外电场极化<ul>
<li>在相干操控里德堡原子时需要做到对外电场的屏蔽</li>
<li>反过来也可以通过可调的外电场对里德堡原子进行按需操控</li>
</ul>
</li>
</ul>
<h3 id="里德堡原子间的阻塞效应"><a href="#里德堡原子间的阻塞效应" class="headerlink" title="里德堡原子间的阻塞效应"></a>里德堡原子间的阻塞效应</h3><p>极大的电偶极矩使得里德堡原子在相互作用时出现许多奇异的现象，其中被广泛利用的就是里德堡原子的阻塞效应</p>
<ul>
<li>里德堡原子间相互作用<ul>
<li>范德瓦尔斯相互作用(V«Δ)：原子间距较远或能级达不到共振条件时的情形。在铷原子中，两个里德堡原子间的范德瓦尔斯相互作用可以比基态的两个原子相互作用强度大20个数量级</li>
<li>共振偶极相互作用(V»Δ)：对应原子间距很近的情形<ul>
<li>在共振偶极相互作用情形下，如果恰好满足Δ=0，此时又称Förster共振，是一种无辐射的耦合效应。2016年Pillet研究组观测到了偶极阻塞效应。此外Förster共振在生物学方面有着重要的应用</li>
</ul>
</li>
<li>而当系统处于两种相互作用的临界状态(V=Δ)时，定义此时原子间距为范德瓦尔斯半径R，正比于n的7/3次方</li>
</ul>
</li>
<li>里德堡原子多体问题<ul>
<li>范德瓦尔斯相互作用能量正比于R的-6次方，相互作用以近邻为主，考虑两两成对原子间相互作用即可</li>
<li>共振偶极相互作用能量正比于R的-3次方，每个原子周围都有同等作用强度的原子与之作用，这种情况下不能拆分为两两相互作用，必须考虑多体作用的整个系统</li>
</ul>
</li>
<li>阻塞效应<ul>
<li>一个被共振激发到里德堡态的原子使得距离较近的另一个原子无法再被这束激光激发到里德堡态，于是以此里德堡原子为中心形成了一个无法被激发到里德堡态的区域求，这个现象就是里德堡原子的阻塞效应，这个区域球的半径就叫做阻塞半径</li>
</ul>
</li>
</ul>
<h2 id="里德堡原子研究进展"><a href="#里德堡原子研究进展" class="headerlink" title="里德堡原子研究进展"></a>里德堡原子研究进展</h2><mark class="hl-label purple">因为上述众多特性与优势，里德堡原子在量子信息领域成为最热门的研究方向之一</mark> 
<h3 id="微波信号强度探测"><a href="#微波信号强度探测" class="headerlink" title="微波信号强度探测"></a>微波信号强度探测</h3><ul>
<li>极窄的能级间隔使得里德堡激发态系统能与微波发生耦合</li>
<li>里德堡激发态系统对微波的响应由固定的物理参数决定，因此可以理论推导出探测微波的频率和强度等信息</li>
<li>与经典微波探测手段不同，里德堡原子的微波探测器能够在室温下完成<mark class="hl-label blue">超宽带</mark> 和<mark class="hl-label blue">超高灵敏度</mark> 以及<mark class="hl-label blue">实时高动态</mark> 的微波探测</li>
</ul>
<h3 id="微波信号相位信息分辨"><a href="#微波信号相位信息分辨" class="headerlink" title="微波信号相位信息分辨"></a>微波信号相位信息分辨</h3><ul>
<li>通过<mark class="hl-label blue">超外差</mark> 的方式能够实现里德堡原子超高灵敏且能够确定频率和相位的微波探测</li>
<li>所谓原子超外差测量模型是施加本振微波场作为频率和相位参考，与待测信号微波场发生干涉，<mark class="hl-label blue">通过混频信号来获取待测信号微波场的相位和频率信息</mark> </li>
<li>此外，通过调节引入的本振微波场的拉比频率大小，也可以提高透射峰交汇处的斜率，即探测灵敏度。<mark class="hl-label blue">里德堡原子的微波探测雷达正在逐步迈向应用化</mark> </li>
</ul>
<h3 id="微波调制里德堡原子构成受控Z门"><a href="#微波调制里德堡原子构成受控Z门" class="headerlink" title="微波调制里德堡原子构成受控Z门"></a>微波调制里德堡原子构成受控Z门</h3><ul>
<li>微波能够耦合两个里德堡态，这成为了微波操控里德堡原子间相互作用的手段</li>
<li>微波能使控制比特处于里德堡激发态，并借由阻塞效应抑制目标比特的里德堡态激发，这边构成了受控Z门</li>
<li>受控Z门再与Hadamard门组合可以实现受控非门，可以完成量子信息领域中的各种信息处理</li>
</ul>
<h3 id="构建单光子开关以及制备单光子源"><a href="#构建单光子开关以及制备单光子源" class="headerlink" title="构建单光子开关以及制备单光子源"></a>构建单光子开关以及制备单光子源</h3><p>里德堡原子间相互作用表现为长程强相互作用，于是里德堡原子系统表现出很强的量子非线性</p>
<ul>
<li>由于阻塞效应的存在，当输入信号光脉冲中光子数不断增加时，系统EIT透射谱被破坏</li>
<li>随着主量子数的增大，被激发的里德堡原子平均间距变短，相互作用变强，直至当整个系统中只能够激发一个里德堡态自旋波时，存储后恢复的信号光来自单一激发的里德堡自旋波，通过自关联测量发现恢复的光子信号表现出单光子特性</li>
</ul>
<h3 id="构建量子模拟器"><a href="#构建量子模拟器" class="headerlink" title="构建量子模拟器"></a>构建量子模拟器</h3><p>里德堡原子间相互作用表现为长程相互作用，于是实验上能够利用原子间相互作用迅速完成光晶格中里德堡原子格点的操作过程</p>
<ul>
<li>将里德堡二能级哈密顿量转换为伊辛自旋1/2模型对应哈密顿量，即里德堡原子与光晶格阵列结合可以完成伊辛自旋模型的量子模拟器</li>
<li>基于里德堡原子阵列的量子计算系统，原子在阵列中随机分布，通过初始化过程构建无缺陷的量子寄存器。系统施加不同的指令对应着阵列中不同位置的原子被激光共振激发到里德堡态，而里德堡原子间的强相互作用可以控制临近的原子的激发情况，可以实现计算操控相邻比特的量子算法</li>
</ul>
<h2 id="里德堡原子实现微波频谱感知"><a href="#里德堡原子实现微波频谱感知" class="headerlink" title="里德堡原子实现微波频谱感知"></a>里德堡原子实现微波频谱感知</h2><h3 id="经典微波测量方法"><a href="#经典微波测量方法" class="headerlink" title="经典微波测量方法"></a>经典微波测量方法</h3><p>经典微波测量方法通过微波诱导金属中自由电子产生有规律的感应电流来提取微波电场的信息，其具有以下瓶颈：</p>
<ul>
<li>金属中的自由电子具有随机热运动特性，这将在感应电流中引入随机热噪声，从而限制了经典微波测量方法灵敏度的提高</li>
</ul>
<h3 id="里德堡原子射频传感器"><a href="#里德堡原子射频传感器" class="headerlink" title="里德堡原子射频传感器"></a>里德堡原子射频传感器</h3><ul>
<li>基本原理：里德堡原子的极大电偶极矩使得其对微波电场具有极高的灵敏度，能够实现对微弱电场信号的探测</li>
<li>核心原理：EIT-AT效应（电磁诱导透明-欧特莱-汤斯效应），<mark class="hl-label blue">里德堡原子射频传感器就是利用EIT-AT效应，将电磁波信息调制到光信号上</mark> <ul>
<li>EIT效应：当原子因探测光从基态跃迁至低激发态，并进一步因耦合光由低激发态跃迁至高激发态后，在耦合光的持续照射下，探测光可以透过原子群</li>
<li>AT效应：指电磁场共振或近共振作用于原子或分子的跃迁时, 导致相应的吸收谱线产生分裂的现象。<ul>
<li>对EIT实验得到的里德堡激发态原子群注入一定频率的微波，将导致扫描峰的分裂</li>
<li>频域上两峰间隔对应入射电磁场的频率</li>
</ul>
</li>
</ul>
</li>
<li>设备构成：里德堡激发态的碱金属气态原子、探测光和耦合光发射器、微波注入装置，探测光光电探测器</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/07/27/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
